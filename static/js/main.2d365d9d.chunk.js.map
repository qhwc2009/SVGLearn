{"version":3,"sources":["view/Circle/Circle.module.scss","view/LinearGradient/LinearGradient.module.scss","view/RadiaGradient/RadiaGradient.module.scss","view/Pattern/Pattern.module.scss","view/Path/Path.module.scss","view/Text/Text.module.scss","view/SVGEditor/SVGEditor.module.scss","components/Nav/Nav.jsx","view/Home/Home.jsx","view/Circle/Circle.jsx","utils/util.js","view/SVGEditor/SVGPreview/SVGPreview.jsx","view/SVGEditor/SVGEditor.jsx","view/LinearGradient/LinearGradient.jsx","view/RadiaGradient/RadiaGradient.jsx","view/Pattern/Pattern.jsx","view/Path/Path.jsx","view/Text/Text.jsx","App.js","serviceWorker.js","index.js","view/Home/Home.module.scss"],"names":["module","exports","circle","gradient","pattern","path","text","svgEditor","sideBar","form","formTitle","formContent","typeButton","formComponent","componentTitle","centerContent","svgArea","svgPreview","pages","key","link","title","withRouter","_ref","location","defaultKey","useMemo","pathname","_","get","slice","find","page","indexOf","react_default","a","createElement","menu","theme","defaultSelectedKeys","mode","style","marginTop","height","borderRight","map","Item","react_router_dom","to","Home","className","home","Circle","width","cx","cy","r","fill","d","stroke","strokeWidth","uuid","concat","random","defaultAttrs","React","memo","id","type","config","onClick","handleClick","useCallback","Type","Object","assign","svgTypeConfig","rect","x","y","rx","ry","ellipse","line","x1","y1","x2","y2","SVGEditor","_useState","useState","_useState2","slicedToArray","svgList","setsvgList","typeList","v","k","_useState3","_useState4","selectedSVGId","setselectedSVGId","selectedSVG","i","handleClickCreateSVG","newSVGConfig","newSvgList","toConsumableArray","handleChangeAttr","value","newSelectedSvg","objectSpread","defineProperty","es_button","slider","flex","min","max","onChange","svg","SVGPreview_SVGPreview","LinearGradient","offset","stopColor","RadiaGradient","fx","fy","Pattern","patternUnits","patternContentUnits","points","Path","Text","xList","useRef","dySinList","setDySinList","time","useEffect","interval","setInterval","current","newYList","t","ly","item","idx","newY","Math","sin","arrange","clearInterval","dy","join","dx","fontSize","Sider","Content","App","basename","layout","Nav_Nav","react_router","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d365d9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3yd6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradient\":\"LinearGradient_gradient__ksNOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradient\":\"RadiaGradient_gradient__2roKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pattern\":\"Pattern_pattern__1IHFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"path\":\"Path_path__3znVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__3-cOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgEditor\":\"SVGEditor_svgEditor__2OLep\",\"sideBar\":\"SVGEditor_sideBar__3FgMW\",\"form\":\"SVGEditor_form__3gAML\",\"formTitle\":\"SVGEditor_formTitle__33A85\",\"formContent\":\"SVGEditor_formContent__2voRI\",\"typeButton\":\"SVGEditor_typeButton__1uJ2n\",\"formComponent\":\"SVGEditor_formComponent__l-pb9\",\"componentTitle\":\"SVGEditor_componentTitle__1j13B\",\"centerContent\":\"SVGEditor_centerContent__1J4DC\",\"svgArea\":\"SVGEditor_svgArea__2hBNH\",\"svgPreview\":\"SVGEditor_svgPreview__W49MB\"};","import React, { useMemo } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { Menu } from 'antd';\n\nconst pages = [\n  {\n    key: '1',\n    link: '/',\n    title: 'Home',\n  },\n  {\n    key: '2',\n    link: '/circle',\n    title: 'Shape',\n  },\n  {\n    key: '3',\n    link: '/SVGEditor',\n    title: 'SVGEditor',\n  },\n  {\n    key: '4',\n    link: '/LinearGradient',\n    title: 'LinearGradient',\n  },\n  {\n    key: '5',\n    link: '/RadiaGradient',\n    title: 'RadiaGradient',\n  },\n  {\n    key: '6',\n    link: '/Pattern',\n    title: 'Pattern',\n  },\n  {\n    key: '7',\n    link: '/Path',\n    title: 'Path',\n  },\n  {\n    key: '8',\n    link: '/Text',\n    title: 'Text',\n  },\n];\n\nfunction Nav({ location }) {\n  const defaultKey = useMemo(() => {\n    if (location.pathname === '/') {\n      return '1';\n    } else {\n      return _.get(pages\n        .slice(1)\n        .find(page => location.pathname.indexOf(page.link) !== -1), 'key', '1');\n    }\n  }, [location.pathname]);\n  return (\n    <Menu\n      theme=\"dark\"\n      defaultSelectedKeys={[defaultKey]}\n      mode=\"inline\"\n      style={{ marginTop: '60px', height: '100%', borderRight: 0 }}\n    >\n      {pages.map(page => (\n        <Menu.Item key={page.key}>\n          <Link to={page.link}>{page.title}</Link>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n}\n\nexport default withRouter(Nav);\n","import React from 'react'\nimport style from './Home.module.scss'\n\nexport default function Home() {\n  return (\n    <div className={style.home}>\n      <h1 className={style.title}>SVG Learn</h1>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './Circle.module.scss'\n\nexport default function Circle() {\n  return (\n    <div className={style.circle}>\n      <svg width=\"200\" height=\"200\">\n        <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"#39F\" />\n\n        <circle cx=\"70\" cy=\"80\" r=\"20\" fill=\"white\" />\n        <circle cx=\"130\" cy=\"80\" r=\"20\" fill=\"white\" />\n        <circle cx=\"65\" cy=\"75\" r=\"10\" fill=\"black\" />\n        <circle cx=\"125\" cy=\"75\" r=\"10\" fill=\"black\" />\n\n        <path\n          d=\"M 50 140 A 60 60 0 0 0 150 140\"\n          stroke=\"white\"\n          strokeWidth=\"3\"\n          fill=\"none\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import _ from 'lodash';\n\nexport const uuid = () => `${_.random(0, 1000)}-${_.random(0, 1000)}-${_.random(0, 1000)}-${_.random(0, 1000)}`;","import React, { useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\n// import style from './SVGPreview.module.scss'\n\nconst defaultAttrs = {\n  fill: '#ffffff',\n  stroke: '#ff0000'\n}\n\nfunction SVGPreview({ id, type, config, onClick }) {\n  const handleClick = useCallback(() => {\n    onClick(id)\n  }, [id, onClick])\n  const Type = useMemo(() => type, [type])\n  return <Type onClick={handleClick} {...config} {...defaultAttrs} />\n}\n\nSVGPreview.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  config: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default React.memo(SVGPreview)\n","import React, { useState, useMemo, useCallback } from 'react'\nimport _ from 'lodash'\nimport { Button, Slider } from 'antd'\nimport { uuid } from 'utils/util'\n\nimport SVGPreview from './SVGPreview/SVGPreview'\n\nimport style from './SVGEditor.module.scss'\n\nconst svgTypeConfig = {\n  rect: { x: 10, y: 10, width: 200, height: 100, rx: 0, ry: 0 },\n  circle: { cx: 200, cy: 200, r: 50 },\n  ellipse: { cx: 200, cy: 200, rx: 80, ry: 30 },\n  line: { x1: 10, y1: 10, x2: 100, y2: 100 }\n}\n\nexport default function SVGEditor() {\n  const [svgList, setsvgList] = useState([])\n  const typeList = useMemo(() => _.map(svgTypeConfig, (v, k) => k), [])\n\n  const [selectedSVGId, setselectedSVGId] = useState(null)\n  const selectedSVG = useMemo(() => svgList.find(i => i.id === selectedSVGId), [\n    selectedSVGId,\n    svgList\n  ])\n\n  const handleClickCreateSVG = useCallback(\n    type => {\n      const id = uuid()\n      const newSVGConfig = {\n        id,\n        type,\n        config: svgTypeConfig[type]\n      }\n      const newSvgList = [...svgList, newSVGConfig]\n      setsvgList(newSvgList)\n      setselectedSVGId(id)\n    },\n    [svgList]\n  )\n\n  const handleChangeAttr = useCallback(\n    (type, value) => {\n      const newSelectedSvg = selectedSVG\n      newSelectedSvg.config = { ...newSelectedSvg.config, [type]: value }\n      setsvgList([...svgList])\n    },\n    [selectedSVG, svgList]\n  )\n\n  return (\n    <div className={style.svgEditor}>\n      <div className={style.sideBar}>\n        <div className={style.form}>\n          <div className={style.formTitle}>创建图形</div>\n          <div className={style.formContent}>\n            {typeList.map(type => (\n              <Button\n                className={style.typeButton}\n                type=\"primary\"\n                key={type}\n                onClick={() => {\n                  handleClickCreateSVG(type)\n                }}\n              >\n                {type}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className={style.form}>\n          <div className={style.formTitle}>编辑形状</div>\n          {selectedSVGId ? (\n            <div className={style.formContent}>\n              {_.map(_.get(selectedSVG, 'config', {}), (v, k) => (\n                <div className={style.formComponent} key={k}>\n                  <span className={style.componentTitle}>{k}:</span>\n                  <Slider\n                    style={{ flex: 1 }}\n                    min={0}\n                    max={800}\n                    onChange={value => {\n                      handleChangeAttr(k, value)\n                    }}\n                    value={v}\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className={style.centerContent}>请先创建形状</div>\n          )}\n        </div>\n\n        {/* <div className={style.form}>\n          <div className={style.formTitle}>编辑属性</div>\n          <div className={style.formContent}>\n            {typeList.map(type => (\n              <Button\n                className={style.typeButton}\n                type=\"primary\"\n                key={type}\n                onClick={() => {\n                  handleClickCreateSVG(type)\n                }}\n              >\n                {type}\n              </Button>\n            ))}\n          </div>\n        </div> */}\n\n      </div>\n      <div className={style.svgArea}>\n        <svg className={style.svgPreview}>\n          {svgList.map(svg => (\n            <SVGPreview key={svg.id} id={svg.id} type={svg.type} config={svg.config} onClick={(id) => {setselectedSVGId(id)}} />\n          ))}\n        </svg>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './LinearGradient.module.scss'\n\nexport default function LinearGradient() {\n  return (\n    <div className={style.gradient}>\n      <svg width=\"300\" height=\"300\">\n        <defs>\n          <linearGradient id=\"grad1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\n            <stop offset=\"0\" stopColor=\"#1497FC\" />\n            <stop offset=\"0.5\" stopColor=\"#A469BE\" />\n            <stop offset=\"1\" stopColor=\"#FF8C00\" />\n          </linearGradient>\n        </defs>\n        <rect x=\"100\" y=\"100\" fill=\"url(#grad1)\" width=\"200\" height=\"150\" />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './RadiaGradient.module.scss'\n\nexport default function RadiaGradient() {\n  return (\n    <div className={style.gradient}>\n      <svg width=\"300\" height=\"300\">\n        <defs>\n          <radialGradient id=\"grad2\" cx=\"0.5\" cy=\"0.5\" r=\"0.5\" fx=\"0.8\" fy=\"0.2\">\n            <stop offset=\"0\" stopColor=\"rgb(20, 151, 252)\" />\n            <stop offset=\"0.5\" stopColor=\"rgb(164, 105, 190)\" />\n            <stop offset=\"1\" stopColor=\"rgb(255, 140, 0)\" />\n          </radialGradient>\n        </defs>\n        <rect x=\"100\" y=\"100\" width=\"200\" height=\"150\" fill=\"url(#grad2)\" />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './Pattern.module.scss'\n\nexport default function Pattern() {\n  return (\n    <div className={style.pattern}>\n      <svg width=\"100%\" height=\"100%\">\n        <defs>\n          <pattern\n            id=\"pattern1\"\n            x=\"0\"\n            y=\"0\"\n            width=\"0.25\"\n            height=\"0.25\"\n            patternUnits=\"objectBoundingBox\"\n            patternContentUnits=\"objectBoundingBox\"\n          >\n            <circle cx=\"0.01\" cy=\"0.01\" r=\"0.01\" fill=\"red\" />\n            {/* <circle cx=\"10\" cy=\"10\" r=\"5\" fill=\"red\" /> */}\n            <polygon points=\"0.03 0.01 0.06 0.05 0 0.05\" fill=\"green\" />\n          </pattern>\n        </defs>\n        <rect\n          x=\"100\"\n          y=\"100\"\n          width=\"800\"\n          height=\"300\"\n          fill=\"url(#pattern1)\"\n          stroke=\"blue\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport style from './Path.module.scss'\n\nexport default function Path() {\n  return (\n    <div className={style.path}>\n      <svg width=\"100%\" height=\"100%\">\n        <path\n          d=\"M200 200 h 300 v 100 l 100 -100 M 0 0 L 200 200\"\n          stroke=\"red\"\n          fill=\"transparent\"\n        />\n        <path\n          d=\"M400 300 h100 l -100 100 v -100 M 500 300 A 100 100 0 0 1 400 400\"\n          stroke=\"red\"\n          fill=\"transparent\"\n        />\n        <path d=\"M700 200 Q 700 300 800 200 T 900 200 T 1000 300 C 800 500 700 600 900 600 S 1100 200 1200 400 Z\" stroke=\"red\" fill=\"blue\" />\n      </svg>\n    </div>\n  )\n}\n","import React, { useEffect, useState, useMemo, useRef } from 'react'\nimport style from './Text.module.scss'\n\nexport default function Text() {\n  const xList = useRef([20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20])\n  const [dySinList, setDySinList] = useState([])\n  const time = useRef(0)\n  useEffect(() => {\n    const arrange = (t, xList) => {\n      const w = 0.02\n      const s = 50\n      let ly = 0\n      let cy\n      const yList = xList.map((item, idx) => {\n        cy = -s * Math.sin(w * idx * 20 + t)\n        const newY = cy - ly\n        ly = cy\n        return newY\n      })\n      return yList\n    }\n    const interval = setInterval(() => {\n      time.current += 0.01\n      const newYList = arrange(time.current, xList.current)\n      setDySinList(newYList)\n    }, 10)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  const dy = useMemo(() => dySinList.join(' '), [dySinList])\n  const dx = useMemo(() => xList.current.join(' '), [])\n  return (\n    <div className={style.text}>\n      <svg width=\"100%\" height=\"100%\">\n        <defs>\n          <pattern\n            id=\"grid\"\n            x=\"0\"\n            y=\"0\"\n            width=\"20\"\n            height=\"20\"\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <path stroke=\"#E0E0E0\" fill=\"none\" d=\"M 0 0 H 20 V 20\" />\n          </pattern>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n        <text x=\"100\" y=\"100\" dx={dx} dy={dy} style={{ fontSize: '50px' }}>\n          X晨哥牛逼--真的好牛逼\n        </text>\n        <path d=\"M 100 0 V 200 M 0 100 H 200\" stroke=\"red\" />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Layout } from 'antd'\n\nimport Nav from 'components/Nav/Nav'\n\nimport Home from 'view/Home/Home'\nimport Circle from 'view/Circle/Circle'\nimport SVGEditor from 'view/SVGEditor/SVGEditor';\nimport LinearGradient from 'view/LinearGradient/LinearGradient';\nimport RadiaGradient from 'view/RadiaGradient/RadiaGradient';\nimport Pattern from 'view/Pattern/Pattern';\nimport Path from 'view/Path/Path';\nimport Text from 'view/Text/Text';\n\nimport './App.scss'\n\nconst { Sider, Content } = Layout\n\nfunction App() {\n  return (\n    <Router basename=\"/SvgLearn\">\n      <div className=\"App\">\n        <Layout className=\"layout\">\n          <Sider className=\"sider\">\n            <Nav />\n          </Sider>\n          <Content className=\"content\">\n            <div className=\"App\">\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/circle\" exact component={Circle} />\n              <Route path=\"/SVGEditor\" exact component={SVGEditor} />\n              <Route path=\"/LinearGradient\" exact component={LinearGradient} />\n              <Route path=\"/RadiaGradient\" exact component={RadiaGradient} />\n              <Route path=\"/Pattern\" exact component={Pattern} />\n              <Route path=\"/Path\" exact component={Path} />\n              <Route path=\"/Text\" exact component={Text} />\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__33MBa\",\"title\":\"Home_title__2XIsX\"};"],"sourceRoot":""}